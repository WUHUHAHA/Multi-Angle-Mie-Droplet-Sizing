\subsection{Test the Intensity Function}
Before jumping in and making images, it is a good idea to test the intensity function, \texttt{Irr\_int.m}

Change to the directory containing \texttt{Irr\_int.m}.  Make the scattering coefficient database variables global, and load the water database that came with the downloaded code package as shown:

\begin{verbatim}
>> cd ./multi_angle_mie_sizing/mie_m_code
>> global A B
>> load ../../multi_angle_mie_sizing/database_files/
               scattering_coefficients_water_sub_angs.mat
\end{verbatim}
Define the input variables (note calculation of size factor, x):
\begin{verbatim}
>> diameter=25.02;
>> sigma=10;
>> wavelength=514.5;
>> x=2*pi*(diameter/2)*1e3/wavelength;
>> sigx=2*pi*(sigma)*1e3/wavelength;
>> PDF_type='single';
>> theta=139.03*pi()/180;
>> phi=0*pi()/180;
>> half_cone_ang=0.2*pi()/180;
>> gamma_ref=pi()/2;
>> xi=pi()/2;
>> method='full';
\end{verbatim}
Run the routine:
\begin{verbatim}
>> [intensity I Q U V matches]=Irr_int(x,sigx,PDF_type,...
         theta, phi, half_cone_ang, gamma_ref, xi, method)

intensity =

    0.3261


I =

   1.0e+03 *

         0         0    9.0955         0         0
         0    9.8185    9.8185    9.8185         0
    9.9671    9.9672    9.9673    9.9672    9.9671
         0    9.5866    9.5866    9.5866         0
         0         0    8.8292         0         0


Q =

   1.0e+03 *

         0         0   -9.0955         0         0
         0   -9.8184   -9.8185   -9.8184         0
   -9.9670   -9.9672   -9.9673   -9.9672   -9.9670
         0   -9.5866   -9.5866   -9.5866         0
         0         0   -8.8292         0         0


U =

         0         0    0.0000         0         0
         0  -25.8268    0.0000   25.8268         0
  -52.5150  -26.2580    0.0000   26.2580   52.5150
         0  -25.2935    0.0000   25.2935         0
         0         0    0.0000         0         0


V =

     0     0     0     0     0
     0     0     0     0     0
     0     0     0     0     0
     0     0     0     0     0
     0     0     0     0     0


matches =

    2.4260  152.6527

\end{verbatim}

Your output should match the above.

\subsection{Real Images}

The PNG format uses lossless compression and is an excellent choice for use with this method, as most proprietary RAW or other high-color-depth image types are easily converted with free tools such as \texttt{http://www.imagemagick.org/}.  In addition, the format enjoys full support from MATLAB.

Two possible conversion routes for real images from a Canon S90, for example, both use the \texttt{ImageMagick} program \texttt{convert} and are demonstrated below.

\begin{verbatim} 
Conversion route #1: 
(uses imagemagik which calls ufraw to do conversion)

$ convert cr2:IMG_0595.CR2 png:image.png
  
Conversion route #2:
(uses dcraw first, then imagemagik)

$ dcraw -4 IMG_0595.CR2

    then

$ convert IMG_0595.ppm image.png
\end{verbatim}

The above should only be considered a starting point - currently very little testing of real high-bit-depth images has been finished.  Be VERY wary of the effects of any conversion on the linearity of your images.

\subsection{Make Simulated Data Images}

It is useful to generate a simulated data set in order to test all the routines, and also to allow much of the computational effort in an actual experiment to be completed ahead of time.  The simulated image routine is capable of producing 8-bit and 12-bit color depth (per channel) JPEG images, and also 8-bit and 16-bit color depth (per channel) PNG images.  

The simulated images contain both data and registration information.  This is reflected in the .ini files by assigning the same image both as data and as registration.  In practice, it is almost impossible to get good data signal-to-noise images and at the same time capture a good image of the registration points, so two separate images taken from the exact samem location, but with different exposure/lighting, are used.

The function for making simulated images, \texttt{make\_data\_images.m}, is controlled by an initialization data file.  If no initialization file exists, the routine will create an example file.  The newly created file may be edited as desired.

For this example, change to the directory containing \texttt{make\_data\_images.m} and and run the routine as shown:
\begin{verbatim}
>> cd ./multi_angle_mie_sizing/image_creation/
>> make_data_images('new_initialization_file.ini')
\end{verbatim}

The GUI asks where to save the images; for the purposes of this example create a directory called \texttt{test\_images} and let the routine create the initialization file there.  In practice this directory and filename may be at any desired location. 

The function will now create the initialization file, and ask if the user would like to create images.  Select ``No'' if changes to the configuration are needed.  For this example, select ``Yes.''

The GUI will ask for a filename and location to save the image files.  The filename supplied will be used as the base filename for the image set; all images will be in the directory selected from the GUI.  For the example, keep the default \texttt{save\_file} name and directory and select ``Save.''

Using the default configuration as above (without any changes) will make a data set based on setup Method \#3 (MTD3), that consists of one reference image at 40\textdegree and six data images evenly spaced between 138-150\textdegree.  Droplets will cover a range between 0.5-50$\mu$m with a log-normal distribution and $\sigma=10$.  The default configuration uses a linearly vertically polarized laser as the incident light source, and a linearly oriented polarizing filter at the detector camera.

Eight figures should open.  The first seven figures are the images described above, the eighth image is a contour plot showing the simulated sizes.  The data images are saved in the chosen directory as 16-bit PNG, however the contour plot is not saved.  If you want to keep it then save it manually (but remember that all data required to recreate the contour plot is automatically saved in the chosen directory as .mat files). For each image there is a \texttt{``dg''} file and a \texttt{``In''} file, containing respectively the diameter information and intensity information.  There is also one \texttt{``info''} file which contains all the configuration parameters used by \texttt{make\_data\_images.m} to produce the simulated data set.  In addition, a template image processing initialization file is created in that directory.  The images created should look similar to those in Figure \ref{default_sim_images}.  Most printouts and screens do not have the dynamic range to show the brightest and darkest parts of the image together, however the PNG images created in this example have 16-bit color depth per channel (65536 possible intensities) and have valid pixel values for the entire size range, even in squares of the image that appear ``dark'' on the screen or in print.  In this example, the value of the darkest region is 83, compared to the 65535 highest possible value.

\begin{figure}[tbp]
\begin{center}
\includegraphics[scale=.7]{./example/make_images/droplet_sizes.eps} \\
\hspace*{1pt} \hfill (a) \hfill \hspace*{1pt} \\
\vspace*{0.1in}
\includegraphics[scale=.35]{./example/make_images/default_img_40.eps} 
%\includegraphics[scale=.3]{./example/make_images/default_img_138.eps}
%\includegraphics[scale=.3]{./example/make_images/default_img_140_4.eps}
\includegraphics[scale=.35]{./example/make_images/default_img_142_8.eps}
\includegraphics[scale=.35]{./example/make_images/default_img_145_2.eps}
\includegraphics[scale=.35]{./example/make_images/default_img_147_6.eps}
\includegraphics[scale=.35]{./example/make_images/default_img_150.eps}\\
\hspace*{40pt} 40\textdegree \hfill 142.8\textdegree \hfill 145.2\textdegree \hfill 147.6\textdegree \hfill 150\textdegree \hspace*{40pt} \\
\vspace*{0.1in}
\hspace*{1pt} \hfill (b) \hfill \hspace*{1pt} \\
\vspace*{0.1in}
\parbox{.8\linewidth}{\caption{\label{default_sim_images}(a) Plot of the simulated mean droplet sizes within the images.  From top to bottom of the image, 0.5, 6.7, 13, 19, 25, 31, 38, 44, and 50$\mu$m. (b) Simulated images at a few representative angles. }}
\end{center}
\end{figure}

The initialization file may be edited to create customized data sets.  The options for this are documented earlier in Section \ref{mie_scattering_matlab_code} and also sparsely documented within the code.  Take a few minutes to read the configuration parameters available.  

To create a data set based on an arbitrary initialization file, supply the full file name and path and re-run the routine, for instance:

\begin{verbatim}
>> make_data_images('./test/arbitary_initialization_file.ini')
\end{verbatim}
