\chapter{Matlab Processing Code}
\label{matlab_processing_code}

%Look, it's possible to include Matlab code like this: \mcode{for i=1:.1:1}.  See, that's cool.

All programming and processing was done in MATLAB\cite{MATLAB}.  The code written specifically for this project is included in the following sections, however a few helpful functions outside the standard MATLAB toolboxes and written by others were used in the current work.   These are listed below:
\begin{compactitem}
 \item \texttt{inifile.m}: This function creates and reads keyword, text-based (ASCII) initialization files.  The file is called within several of the data processing routines, and is publicly available from:
 http://www.mathworks.com/matlabcentral/fileexchange
 \item \texttt{MFquestdlg.m}: This is a simple modification of \texttt{questdlg.m} which enables users to specify the position of the 'questdlg' question dialog box on the screen.  The file is publicly available from http://www.mathworks.com/matlabcentral/fileexchange, and is called within several of the data processing routines.
\item \texttt{use\_lockfile.m}: Simple file locking function, implemented to allow multiple instances of the sizing routine to run at the same time and have read/write access the same look-up-table database.
\end{compactitem}
\vspace*{0.25in}
For most convenient use of the code written for this project, these files should be placed in an existing Matlab PATH directory or added to the default Matlab PATH. 

As covered in detail within Section \ref{Mie_Scattering}, the most well known computational method for solving the Mie scattering problem was presented by Bohren and Huffman\cite{Bohren_Huffman}.  The MATLAB-based Mie scattering subroutines used for the current project, written by Christian M{\"a}tzler\cite{Matzler_matlab_mie}, are based directly on the work of Bohren and Huffman and follow their terminology and nomenclature.  Only minor formatting changes, such as adjusting some caps sensitivity necessary to run code on our current version of MATLAB, were made to M{\"a}tzler's routines.  The M{\"a}tzler code and an excellent discussion of that code development is widely available online and therefore has not been reproduced here other than to list below the specific subroutines called from the current data processing codes.

M{\"a}tzler codes used in the current work:
\begin{compactitem}
\item mie\_S12.m: This code is used to calculate S1 and S2 from the scattering matrix.
\item mie\_ab.m: This is a subroutine called by mie\_S12.m, which calculates the Mie coefficients $a_n$ and $b_n$. 
\item mie\_pt.m: This is a subroutine called by mie\_S12.m, which calculates Mie angular dependent functions $\pi_n$ and $\tau_n$.
\end{compactitem}
\vspace*{0.25in}

All other code written for the current work is explicitly listed below, and unless stated otherwise is distributed with Copyright (C) 2012, Stephen D. LePera,  GNU General Public License, v3.  These programs are free software: you can redistribute and/or modify them under the terms of the GNU General Public License.  The programs are provided in the hope that they will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  The full terms of this license are available in an included file, GPL\_v3\_license.txt, within the packaged code, or please see the GNU General Public License online for more complete details, available at http://www.gnu.org/licenses/.

The entire software package described herein is available for download (look in the Downloads section) from:
\begin{verbatim}
https://github.com/leperas/Multi-Angle-Mie-Droplet-Sizing
\end{verbatim}
Additionally, this repository is where the latest updates, capabilities, and new versions will be found.

\pagebreak
\section{Helper Functions}
\subsection{Multiple Output Function}
\begin{verbatim} 
File: mfprintf.m
Purpose: useful for controlling logging information to multiple 
files and the screen all with one function call.
\end{verbatim}

\lstinputlisting{../../multi_angle_mie_sizing/helper_functions/mfprintf.m}

\pagebreak
\subsection{Lockfile Function}
\begin{verbatim} 
File: use_lockfile.m
Purpose: Simple file locking function, implemented to allow 
multiple instances of the sizing routine to run at the same 
time and have read/write access the same look-up-table database.
\end{verbatim}

\lstinputlisting{../../multi_angle_mie_sizing/helper_functions/use_lockfile.m}


\pagebreak
\section{Mie Scattering Routines}
\subsection{Scattering Coefficient Database}
\begin{verbatim} 
File: create_Sx_database.m
Purpose: calculation of S1 and S2 scattering coefficients and 
storage in a database for future use.
\end{verbatim}

\lstinputlisting{../../multi_angle_mie_sizing/mie_m_code/create_Sx_database.m}
\pagebreak

\subsection{Scattering Intensity}
\label{Irr_int_function}
\begin{verbatim} 
File: Irr_int.m
Purpose: Fuction finds intensity, over a designated solid angle, 
for a single droplet, a log-normal, or a normal distribution of 
homogeneous spherical droplets at any detector angular location
\end{verbatim}

\lstinputlisting{../../multi_angle_mie_sizing/mie_m_code/Irr_int.m}

\pagebreak
\section{Calibration Routines}
\label{calibration_routines}

\subsection{Camera Calibration}
\begin{verbatim} 
File: camera_CCD_calibration.m
Purpose: processes a given area of selected calibration images and 
creates a data file containing the information from that data set 
and the neutral density filters or varying shutter times used to 
generate the images within the data set.
\end{verbatim}

\lstinputlisting{../../multi_angle_mie_sizing/experimental_setup/camera_CCD_calibration.m}
\pagebreak

\pagebreak
\subsection{Camera Regression}
\begin{verbatim} 
File: camera_CCD_regression.m
Purpose: takes data output from the camera calibration and finds 
a two-part regression.  The first part is linear, the second may be
determined within the code.  
\end{verbatim}

\lstinputlisting{../../multi_angle_mie_sizing/experimental_setup/camera_CCD_regression.m}
\pagebreak

\subsection{Image Correction using Calibration}
\begin{verbatim} 
File: make_image_correction.m
Purpose: function that applies the calibration correction determined in 
camera_CCD_regression to an image.  
\end{verbatim}

\lstinputlisting{../../multi_angle_mie_sizing/image_processing/sub_functions/make_image_correction.m}


\pagebreak
\section{Simulated Image Routines}
\label{simulated_image_routines}

\subsection{Create Simulated Images}
\begin{verbatim} 
File: make_data_images.m
Purpose: reads from an initialization file to make a 
set of simulaed data images, and creates a processing 
initialization file.
\end{verbatim}

\lstinputlisting{../../multi_angle_mie_sizing/image_creation/make_data_images.m}
\pagebreak

\subsection{Make Image Projection}
\begin{verbatim} 
File: make_image_projection.m
Purpose: creates perspective in a simulated image.
\end{verbatim}

\lstinputlisting{../../multi_angle_mie_sizing/image_creation/make_image_projection.m}


\pagebreak
\section{Multi-angle Data Processing Routines}
\label{data_procesing_routines}

\subsection{Data Image Processor}
\begin{verbatim} 
File: processor_f.m
Purpose: high level function that reads a controlling 
initialization file and then completes the image data 
processing.
\end{verbatim}

\lstinputlisting{../../multi_angle_mie_sizing/image_processing/sub_functions/processor_f.m}

\pagebreak
\subsubsection{Verification of Data Images}
\begin{verbatim} 
File: check_saturation.m
Purpose: Simple GUI interface tool that checks data images 
for saturation.
\end{verbatim}

\lstinputlisting{../../multi_angle_mie_sizing/image_processing/check_saturation.m}

\pagebreak
\subsubsection{Verification of Registration Images}
\begin{verbatim} 
File: check_red_dots.m
Purpose: Simple GUI interface tool that calls redotlocator_v4.m,
a good way to verify registration images are of correct 
exposure to yield correct spatial results.
\end{verbatim}

\lstinputlisting{../../multi_angle_mie_sizing/image_processing/check_red_dots.m}

\pagebreak
\subsubsection{Start Multiple Processing Jobs}
\begin{verbatim} 
File: start_image_processing.m
Purpose: Simple GUI interface tool that runs concurrent image 
processing functions if a multi-core or multi-processor 
computer is available.
\end{verbatim}

\lstinputlisting{../../multi_angle_mie_sizing/image_processing/start_image_processing.m}

\pagebreak
\subsubsection{Locating Registration Dots}
\begin{verbatim} 
File: redotlocator_v4.m
Purpose: finds the four registration dots within the 
registration image and returns their coordinates.
\end{verbatim}

\lstinputlisting{../../multi_angle_mie_sizing/image_processing/sub_functions/redotlocator.m}

\pagebreak
\subsubsection{Registration Coordinate Planar Adjustment}
\begin{verbatim} 
File: find_reg_offset.m
Purpose: uses projection to adjust registration coordinates 
to match the plane of the incident laser sheet.
\end{verbatim}

\lstinputlisting{../../multi_angle_mie_sizing/image_processing/sub_functions/find_reg_offset.m}

\pagebreak
\subsubsection{Perspective Correction}
\begin{verbatim} 
File: correct_perspective.m
Purpose: uses matlab image processing toolbox functions 
to generate a transform between the existing registration image 
and the corrected "flat" image, then applies the transform 
to the input data image.
\end{verbatim}

\lstinputlisting{../../multi_angle_mie_sizing/image_processing/sub_functions/correct_perspective.m}

\pagebreak
\subsubsection{Spatially Registered Intensity Ratios}
\begin{verbatim} 
File: intensities2xyz_v2.m
Purpose: returns an intensity ratio (between each data image 
and the reference image) at every y-z-planar location within 
the region of interest.
\end{verbatim}

\lstinputlisting{../../multi_angle_mie_sizing/image_processing/sub_functions/intensities2xyz_v2.m}

\pagebreak
\subsection{Sizing Processor}
\label{sizing_processing}

\begin{verbatim} 
File: analyze_sizes_f.m
Purpose: high level function that reads a controlling 
initialization file and then completes the sizing 
processing.
\end{verbatim}

\lstinputlisting{../../multi_angle_mie_sizing/sizing_functions/sub_functions/analyze_sizes_f.m}

\pagebreak
\subsubsection{Reverse Look-up of Droplet Sizes}
\begin{verbatim} 
File: int2size3.m
Purpose: returns all possible mean droplet sizes at every 
y-z-planar location within the region of interest, from every 
angular data image intensity ratio.
\end{verbatim}

\lstinputlisting{../../multi_angle_mie_sizing/sizing_functions/sub_functions/int2size3.m}

\pagebreak
\subsubsection{Reverse Look-up Database Query}
\begin{verbatim} 
File: chk4data3.m
Purpose: checks the reverse lookup database structure and either
returns the requested record or returns 0, indicating that a new
record should be calculated.
\end{verbatim}

\lstinputlisting{../../multi_angle_mie_sizing/sizing_functions/sub_functions/chk4data3.m}

\pagebreak
\subsubsection{Reverse Look-up Database Write/Add}
\begin{verbatim} 
File: add_data3.m
Purpose: adds a new record to the lookup database structure, or 
overwrites a record if the requested record already contains data.
\end{verbatim}

\lstinputlisting{../../multi_angle_mie_sizing/sizing_functions/sub_functions/add_data3.m}

\pagebreak
\subsubsection{Grouping Subroutine}
\begin{verbatim} 
File: make_groups_f.m
Purpose: A custum cluster analysis program.
Finds groups of nearby data points and sorts them into groups
\end{verbatim}

\lstinputlisting{./appendix_code/multi_angle_mie_sizing/sizing_functions/sub_functions/make_groups_f.m}